===========================
The 3-say_my_name.py module
===========================

The definition of ``say_my_name(first_name, last_name="")`` module

Usage
-----

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Brennan", "Baraban")
    My name is Brennan Baraban

::

    >>> say_my_name("Cornelius Maxwell", "Jones II")
    My name is Cornelius Maxwell Jones II

An empty string is printed if ```last_name``` is not given

::

    >>> say_my_name("MARIEM")
    My name is MARIEM 

TypeErrors
----------

A TypeError is printed if ``first_name`` and ``last_name``` is not strings

::

    >>> say_my_name(6, "James")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("LeBron", ["Cavs", "Lakers", "Heat"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"LeBron": 6, "James": 23}, 7.7)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

TypeError if anyone of the names is not given

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
